type Artist {
  id: ID
  firstName: String
  secondName: String
  middleName: String
  birthDate: String
  birthPlace: String
  country: String
  bands: [Band]
  instruments: [String]
}

type Query {
  artists(limit: Int, offset: Int): [Artist]
  artist(id: ID!): Artist
}

input CreateArtistInput {
  firstName: String!
  secondName: String!
  middleName: String
  birthDate: String
  birthPlace: String
  country: String!
  bandsIds: [ID]
  instruments: [String]
}

input UpdateArtistInput {
  firstName: String
  secondName: String
  middleName: String
  birthDate: String
  birthPlace: String
  country: String
  bandsIds: [ID]
  instruments: [String]
}

type Mutation {
  createArtist(createArtistInput: CreateArtistInput!): Artist!
  updateArtist(id: ID!, updateArtistInput: UpdateArtistInput!): Artist!
  deleteArtist(id: ID!): Delete
}
